(function(I,C){typeof exports=="object"&&typeof module<"u"?module.exports=C(require("axios"),require("lodash"),require("mobx"),require("uuid"),require("crypto-js")):typeof define=="function"&&define.amd?define(["axios","lodash","mobx","uuid","crypto-js"],C):(I=typeof globalThis<"u"?globalThis:I||self,I["arm-js-library"]=C(I.axios,I._,I.mobx,I.uuid,I.CryptoJS))})(this,function(I,C,Y,z,Z){"use strict";function K(H){const s=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(H){for(const e in H)if(e!=="default"){const t=Object.getOwnPropertyDescriptor(H,e);Object.defineProperty(s,e,t.get?t:{enumerable:!0,get:()=>H[e]})}}return s.default=H,Object.freeze(s)}const ss=K(Y),{makeObservable:es,observable:T,action:x,toJS:D}=ss,{get:i,set:c,find:b,findIndex:j,isObject:ts,isArray:m,isPlainObject:y,isNumber:S,isNull:is,isNil:$,isEmpty:B,isEqual:_,gte:P,lt:J,flatMap:os,map:U,entries:rs,forEach:f,keysIn:E,omit:N}=C,V={isLoading:!0,isError:!1,isNew:!0,data:[],included:[],meta:{}},G={isLoading:!0,isError:!1,isNew:!0,data:{},included:[],meta:{}},L=["destroyRecord","reload","save","set","get","setProperties","isDirty","isError","isLoading","isPristine"],as=["destroyRecord","reload","save","set","get","setProperties","isDirty","isError","isLoading","isPristine","hashId","collectionName"];class ns{constructor(s=[]){this.namespace="api/v1",this.host=window.location.origin,this.collections={},this.aliases={},this.requestHashIds={},this.payloadIncludedReference="type",this._initializeCollections(s),this._initializeAxiosConfig(),es(this,{collections:T,aliases:T,requestHashIds:T,_pushPayloadToCollection:x,_pushRequestHash:x,_addCollection:x,_addAlias:x})}_initializeAxiosConfig(){I.defaults.baseURL=this._getBaseURL()}_initializeCollections(s){f(s,e=>this._addCollection(e,[]))}_getBaseURL(){return`${this.host}/${this.namespace}`}_getAuthorizationToken(){return`Token ${window.localStorage.getItem("token")}`}_addCollection(s,e){this.collections[s]=e}_addAlias(s,e){const t=m(e),o=y(e);t&&(this.aliases[s]=e||[]),o&&(this.aliases[s]=e||{})}_generateHashId(s={id:z.v1()}){const e=JSON.stringify(s);return Z.MD5(e).toString()}_getProperty(s){return i(this,s)}_setProperty(s,e){c(this,s,e);const t=N(D(this.originalRecord),L),o=N(D(this),L);_(t,o)?(c(this,"isDirty",!1),c(this,"isPristine",!0)):(c(this,"isDirty",!0),c(this,"isPristine",!1))}_setProperties(s){function e(d,n=""){return os(rs(d),([u,a])=>{const h=n?`${n}.${u}`:u;return ts(a)&&!m(a)&&a!==null?e(a,h):{key:h,value:a}})}const t=e(s);f(t,({key:d,value:n})=>c(this,d,n));const o=N(D(this.originalRecord),L),r=N(D(this),L);_(o,r)?(c(this,"isDirty",!1),c(this,"isPristine",!0)):(c(this,"isDirty",!0),c(this,"isPristine",!1))}unloadRecord(s){const e=E(this.aliases),t=i(s,"collectionName"),o=j(this.collections[t],{hashId:i(s,"hashId")});P(o,0)&&this.collections[t].splice(o,1),f(e,r=>{const d=m(this.aliases[r]),n=y(this.aliases[r]);if(d){const u=j(this.aliases[r],{hashId:i(s,"hashId")});P(u,0)&&this.aliases[r].splice(u,1)}n&&_(i(s,"hashId"),i(this.aliases[r],"hashId"))&&(this.aliases[r]={})})}_saveRecord(s){const e=i(s,"collectionName"),t=b(this.collections[e],{hashId:i(s,"hashId")}),o=S(i(t,"id")),r=o?i(t,"id"):null,a={resourceMethod:o?"put":"post",resourceName:e,resourceId:r,resourceParams:{},resourcePayload:{data:t},resourceFallback:{},resourceConfig:{}};return this._request(a)}async _deleteRecord(s){const e=i(s,"collectionName"),t=b(this.collections[e],{hashId:i(s,"hashId")}),o=i(s,"id"),n={resourceMethod:"delete",resourceName:i(t,"collectionName"),resourceId:o,resourceParams:{},resourcePayload:null,resourceFallback:{},resourceConfig:{}};return this._request(n)}async _reloadRecord(s){const e=i(s,"id"),r={resourceMethod:"get",resourceName:i(s,"collectionName"),resourceId:e,resourceParams:{},resourcePayload:null,resourceFallback:{},resourceConfig:{skip:!0}};return this._request(r)}_getCollectionRecord(s){const e=i(s,"collectionName"),t=b(this.collections[e],{hashId:i(s,"hashId")});console.log(t)}_injectActions(s){const e={get:this._getProperty,set:this._setProperty,setProperties:this._setProperties,save:()=>this._saveRecord(s),destroyRecord:()=>this._deleteRecord(s),reload:()=>this._reloadRecord(s),getCollection:()=>this._getCollectionRecord(s)},t=E(e);f(t,o=>{s[o]=e[o]})}_injectReferenceKeys(s,e,t=null){const o=is(t)?this._generateHashId({id:i(e,"id"),collectionName:i(e,"collectionName")}):t;c(e,"collectionName",s),c(e,"hashId",o),c(e,"isLoading",!1),c(e,"isError",!1),c(e,"isPristine",!0),c(e,"isDirty",!1)}_pushPayloadToCollection(s,e){const t=m(e),o=y(e),r=E(this.aliases),d=E(this.requestHashIds);let n=null;if(t){const u=U(e,"hashId");f(e,a=>{const h=j(this.collections[s],{hashId:i(a,"hashId")});this._injectActions(a),J(h,0)&&this.collections[s].push(a),P(h,0)&&(this.collections[s][h]=a)}),n=U(u,a=>b(this.collections[s],{hashId:a})),f(r,a=>{const h=m(this.aliases[a]),q=y(this.aliases[a]);h&&f(n,p=>{const g=j(this.aliases[a],{hashId:i(p,"hashId")});P(g,0)&&(this.aliases[a][g]=p)}),q&&f(n,p=>{_(i(p,"hashId"),i(this.aliases[a],"hashId"))&&(this.aliases[a]=p)})})}if(o){const u=e.hashId,a=j(this.collections[s],{hashId:i(e,"hashId")});this._injectActions(e),J(a,0)&&this.collections[s].push(e),P(a,0)&&(this.collections[s][a]=e),n=b(this.collections[s],{hashId:u}),f(r,h=>{const q=m(this.aliases[h]),p=y(this.aliases[h]);q&&f([n],g=>{const R=j(this.aliases[h],{hashId:i(g,"hashId")});P(R,0)&&(this.aliases[h][R]=g)}),p&&_(i(n,"hashId"),i(this.aliases[h],"hashId"))&&(this.aliases[h]=n)}),f(d,h=>{const q=i(this.requestHashIds[h],"data"),p=m(q),g=y(q);p&&f([n],R=>{const M=j(i(this.requestHashIds[h],"data"),{hashId:i(R,"hashId")});P(M,0)&&(this.requestHashIds[h][M]=R)}),g&&_(i(n,"hashId"),i(this.requestHashIds[h],"data.hashId"))&&c(this.requestHashIds[h],"data",n)})}return n}_pushRequestHash(s={},e={isLoading:!0,isError:!1,isNew:!0,data:null}){const t=this._generateHashId(s),o=!$(this.requestHashIds[t]),r=i(e,"isNew");return o&&r?c(this.requestHashIds[t],"isNew",!1):this.requestHashIds[t]=e,this.requestHashIds[t]}setHost(s){this.host=s,this._initializeAxiosConfig()}setNamespace(s){this.namespace=s}setHeadersCommon(s,e){I.defaults.headers.common[`${s}`]=e}setPayloadIncludeReference(s){this.payloadIncludedReference=s}setGlobal(){window&&(window.ARM=Object.freeze(this))}getCollection(s){return this.collections[s]||[]}clearCollection(s){this.collections[s]=[]}getAlias(s,e){return y(e)&&this._injectActions(e),this.aliases[s]||e}createRecord(s,e={}){return c(e,"id",z.v1()),this._injectReferenceKeys(s,e),this._injectActions(e),this.collections[s].push(e),b(this.collections[s],{hashId:i(e,"hashId")})}async _request({resourceMethod:s,resourceName:e,resourceId:t,resourceParams:o,resourcePayload:r,resourceFallback:d,resourceConfig:n}){var Q,W,X;const u={method:s,url:e},a=this._generateHashId({...arguments[0]}),h=i(n,"skip")||!1,q=_(s,"get"),p=_(s,"delete"),g=_(s,"post"),R=S(t),M=!B(o),v=!B(r),w=i(r,"data")||null;if(R&&c(u,"url",`${e}/${t}`),M&&c(u,"params",o),v){const l={data:N(w,as)};c(u,"data",l)}if(q&&!h){const l=this.requestHashIds[a],O=!$(l),F=i(l,"isNew");if(O&&!F)return}v&&c(w,"isLoading",!0);try{const l=await I(u),O=((Q=l==null?void 0:l.data)==null?void 0:Q.data)||d,F=((W=l==null?void 0:l.data)==null?void 0:W.included)||[],cs=((X=l==null?void 0:l.data)==null?void 0:X.meta)||{},hs=y(O),ds=m(O);let k=null;return ds&&f(O,A=>this._injectReferenceKeys(e,A)),hs&&this._injectReferenceKeys(e,O),f(F,A=>{this._injectReferenceKeys(i(A,this.payloadIncludedReference),A),this._pushPayloadToCollection(i(A,"collectionName"),A)}),k=await this._pushPayloadToCollection(e,O),n.alias&&this._addAlias(i(n,"alias"),k),g&&this.unloadRecord(w),p&&this.unloadRecord(k),this.requestHashIds[a]={isLoading:!1,isError:!1,isNew:!1,data:k,included:[],meta:cs},Promise.resolve(k)}catch(l){return v&&(c(w,"isError",!0),c(w,"isLoading",!1)),this.requestHashIds[a]={isLoading:!1,isError:!0,isNew:!1,data:l,included:[],meta:{}},Promise.reject(l)}}query(s,e={},t={}){const o={resourceMethod:"get",resourceName:s,resourceId:null,resourceParams:e,resourcePayload:null,resourceFallback:[],resourceConfig:t},r=V,d=this._pushRequestHash(o,r);return this._request(o),d}queryRecord(s,e={},t={}){const o={resourceMethod:"get",resourceName:s,resourceId:null,resourceParams:e,resourcePayload:null,resourceFallback:{},resourceConfig:t},r=G,d=this._pushRequestHash(o,r);return this._request(o),d}findAll(s,e={}){const t={resourceMethod:"get",resourceName:s,resourceId:null,resourceParams:null,resourcePayload:null,resourceFallback:[],resourceConfig:e},o=V,r=this._pushRequestHash(t,o);return this._request(t),r}findRecord(s,e,t={},o={}){const r={resourceMethod:"get",resourceName:s,resourceId:e,resourceParams:t,resourcePayload:null,resourceFallback:{},resourceConfig:o},d=G,n=this._pushRequestHash(r,d);return this._request(r),n}peekAll(s){return this.collections[s]}peekRecord(s,e){return b(this.collections[s],{id:e})}}return ns});
