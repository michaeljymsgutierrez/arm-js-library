(function(_,H){typeof exports=="object"&&typeof module<"u"?module.exports=H(require("axios"),require("lodash"),require("mobx"),require("uuid"),require("crypto-js")):typeof define=="function"&&define.amd?define(["axios","lodash","mobx","uuid","crypto-js"],H):(_=typeof globalThis<"u"?globalThis:_||self,_["arm-js-library"]=H(_.axios,_._,_.mobx,_.uuid,_.CryptoJS))})(this,function(_,H,ss,k,es){"use strict";function ts(P){const s=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(P){for(const e in P)if(e!=="default"){const t=Object.getOwnPropertyDescriptor(P,e);Object.defineProperty(s,e,t.get?t:{enumerable:!0,get:()=>P[e]})}}return s.default=P,Object.freeze(s)}const is=ts(ss),{makeObservable:rs,observable:x,action:D,toJS:E}=is,{get:r,set:h,find:b,findIndex:q,isObject:os,isArray:m,isPlainObject:y,isNumber:B,isNull:as,isNil:L,isEmpty:v,isEqual:g,gte:R,lt:J,flatMap:ns,map:U,entries:cs,forEach:u,keysIn:M,omit:A}=H,V={isLoading:!0,isError:!1,isNew:!0,data:[],included:[],meta:{}},T={isLoading:!0,isError:!1,isNew:!0,data:{},included:[],meta:{}},F=["destroyRecord","getCollection","reload","save","set","get","setProperties","isDirty","isError","isLoading","isPristine"],hs=["destroyRecord","getCollection","reload","save","set","get","setProperties","isDirty","isError","isLoading","isPristine","hashId","collectionName"];class ds{constructor(s=[]){this.namespace="api/v1",this.host=typeof window<"u"?window.location.origin:"",this.collections={},this.aliases={},this.requestHashIds={},this.payloadIncludedReference="type",this._initializeCollections(s),this._initializeAxiosConfig(),rs(this,{collections:x,aliases:x,requestHashIds:x,_pushPayload:D,_pushRequestHash:D,_addCollection:D,_addAlias:D})}_initializeAxiosConfig(){_.defaults.baseURL=this._getBaseURL()}_initializeCollections(s){u(s,e=>this._addCollection(e,[]))}_getBaseURL(){return`${this.host}/${this.namespace}`}_getAuthorizationToken(){return`Token ${window.localStorage.getItem("token")}`}_addCollection(s,e){this.collections[s]=e}_addAlias(s,e){const t=m(e),i=y(e);t&&(this.aliases[s]=e||[]),i&&(this.aliases[s]=e||{})}_generateHashId(s={id:k.v1()}){const e=JSON.stringify(s);return es.MD5(e).toString()}_getProperty(s){return r(this,s)}_setProperty(s,e){h(this,s,e);const t=A(E(this.originalRecord),F),i=A(E(this),F);g(t,i)?(h(this,"isDirty",!1),h(this,"isPristine",!0)):(h(this,"isDirty",!0),h(this,"isPristine",!1))}_setProperties(s){function e(n,c=""){return ns(cs(n),([a,d])=>{const p=c?`${c}.${a}`:a;return os(d)&&!m(d)&&d!==null?e(d,p):{key:p,value:d}})}const t=e(s);u(t,({key:n,value:c})=>h(this,n,c));const i=A(E(this.originalRecord),F),o=A(E(this),F);g(i,o)?(h(this,"isDirty",!1),h(this,"isPristine",!0)):(h(this,"isDirty",!0),h(this,"isPristine",!1))}unloadRecord(s){const e=M(this.aliases),t=r(s,"collectionName"),i=q(this.collections[t],{hashId:r(s,"hashId")});R(i,0)&&this.collections[t].splice(i,1),u(e,o=>{const n=m(this.aliases[o]),c=y(this.aliases[o]);if(n){const a=q(this.aliases[o],{hashId:r(s,"hashId")});R(a,0)&&this.aliases[o].splice(a,1)}c&&g(r(s,"hashId"),r(this.aliases[o],"hashId"))&&(this.aliases[o]={})})}_saveRecord(s){const e=r(s,"collectionName"),t=b(this.collections[e],{hashId:r(s,"hashId")}),i=B(r(t,"id")),o=i?r(t,"id"):null,d={resourceMethod:i?"put":"post",resourceName:e,resourceId:o,resourceParams:{},resourcePayload:{data:t},resourceFallback:{},resourceConfig:{}};return this._request(d)}async _deleteRecord(s){const e=r(s,"collectionName"),t=b(this.collections[e],{hashId:r(s,"hashId")}),i=r(s,"id"),c={resourceMethod:"delete",resourceName:r(t,"collectionName"),resourceId:Number(i),resourceParams:{},resourcePayload:null,resourceFallback:{},resourceConfig:{}};return this._request(c)}async _reloadRecord(s){const e=r(s,"id"),o={resourceMethod:"get",resourceName:r(s,"collectionName"),resourceId:Number(e),resourceParams:{},resourcePayload:null,resourceFallback:{},resourceConfig:{skipId:k.v1()}};return this._request(o)}_getCollectionRecord(s,e={},t){const i=r(e,"referenceKey")||"",o=r(e,"async")||!1,n=r(t,i)||[],a=y(n)?[n]:n,d=x([]);return u(a,p=>{const l=this._generateHashId({id:r(p,"id"),collectionName:s}),I=b(this.collections[s],{hashId:l});if(!v(I))d.push(I);else if(o){const j={resourceMethod:"get",resourceName:s,resourceId:r(p,"id"),resourceParams:{},resourcePayload:null,resourceFallback:{},resourceConfig:{}},z=T;this._pushRequestHash(j,z),this._request(j)}}),d}_injectActions(s){const e={get:this._getProperty,set:this._setProperty,setProperties:this._setProperties,save:()=>this._saveRecord(s),destroyRecord:()=>this._deleteRecord(s),reload:()=>this._reloadRecord(s),getCollection:(i,o)=>this._getCollectionRecord(i,o,s)},t=M(e);u(t,i=>{s[i]=e[i]})}_injectReferenceKeys(s,e,t=null){const i=as(t)?this._generateHashId({id:r(e,"id"),collectionName:s}):t;h(e,"collectionName",s),h(e,"hashId",i),h(e,"isLoading",!1),h(e,"isError",!1),h(e,"isPristine",!0),h(e,"isDirty",!1)}_pushToCollection(s,e){const t=m(e),i=y(e);if(t){const o=U(e,"hashId");return u(e,n=>{const c=q(this.collections[s],{hashId:r(n,"hashId")});this._injectActions(n),J(c,0)&&this.collections[s].push(n),R(c,0)&&(this.collections[s][c]=n)}),U(o,n=>b(this.collections[s],{hashId:n}))}if(i){const o=e.hashId,n=q(this.collections[s],{hashId:r(e,"hashId")});return this._injectActions(e),J(n,0)&&this.collections[s].push(e),R(n,0)&&(this.collections[s][n]=e),b(this.collections[s],{hashId:o})}}_pushPayload(s,e){const t=m(e),i=y(e),o=M(this.aliases),n=M(this.requestHashIds);let c=this._pushToCollection(s,e);return t&&u(o,a=>{const d=m(this.aliases[a]),p=y(this.aliases[a]);d&&u(c,l=>{const I=q(this.aliases[a],{hashId:r(l,"hashId")});R(I,0)&&(this.aliases[a][I]=l)}),p&&u(c,l=>{g(r(l,"hashId"),r(this.aliases[a],"hashId"))&&(this.aliases[a]=l)})}),i&&(u(o,a=>{const d=m(this.aliases[a]),p=y(this.aliases[a]);d&&u([c],l=>{const I=q(this.aliases[a],{hashId:r(l,"hashId")});R(I,0)&&(this.aliases[a][I]=l)}),p&&g(r(c,"hashId"),r(this.aliases[a],"hashId"))&&(this.aliases[a]=c)}),u(n,a=>{const d=r(this.requestHashIds[a],"data"),p=m(d),l=y(d);p&&u([c],I=>{const j=q(r(this.requestHashIds[a],"data"),{hashId:r(I,"hashId")});R(j,0)&&(this.requestHashIds[a].data[j]=I)}),l&&g(r(c,"hashId"),r(this.requestHashIds[a],"data.hashId"))&&h(this.requestHashIds[a],"data",c)})),c}_pushRequestHash(s={},e={isLoading:!0,isError:!1,isNew:!0,data:null}){const t=this._generateHashId(s),i=!L(this.requestHashIds[t]),o=r(e,"isNew");return i&&o?h(this.requestHashIds[t],"isNew",!1):this.requestHashIds[t]=e,this.requestHashIds[t]}setHost(s){this.host=s,this._initializeAxiosConfig()}setNamespace(s){this.namespace=s}setHeadersCommon(s,e){_.defaults.headers.common[`${s}`]=e}setPayloadIncludeReference(s){this.payloadIncludedReference=s}setGlobal(){typeof window<"u"&&(window.ARM=Object.freeze(this))}getCollection(s){return this.collections[s]||[]}clearCollection(s){this.collections[s]=[]}getAlias(s,e){return y(e)&&this._injectActions(e),this.aliases[s]||e}createRecord(s,e={},t=!0){const i=t?k.v1():k.NIL,o=L(b(this.collections[s],{id:i}));return h(e,"id",i),this._injectReferenceKeys(s,e),this._injectActions(e),o&&this.collections[s].push(e),b(this.collections[s],{id:i})}async _request({resourceMethod:s,resourceName:e,resourceId:t,resourceParams:i,resourcePayload:o,resourceFallback:n,resourceConfig:c}){var Y,Z,K;const a={method:s,url:e},d=this._generateHashId({...arguments[0]}),p=g(s,"get"),l=g(s,"delete"),I=g(s,"post"),j=B(t),z=!v(i),S=!v(o),C=r(o,"data")||null;if(j&&h(a,"url",`${e}/${t}`),z&&h(a,"params",i),S){const f={data:A(C,hs)};h(a,"data",f)}const $=!L(r(c,"skip")),G=g(r(c,"skip"),!0),Q=this.requestHashIds[d],W=!L(Q),X=r(Q,"isNew");if(!(p&&($&&G||!$&&W&&!X||$&&!G&&W&&!X))){S&&h(C,"isLoading",!0);try{const f=await _(a),w=((Y=f==null?void 0:f.data)==null?void 0:Y.data)||n,us=((Z=f==null?void 0:f.data)==null?void 0:Z.included)||[],ls=((K=f==null?void 0:f.data)==null?void 0:K.meta)||{},fs=y(w),ps=m(w);let N=null;return ps&&u(w,O=>this._injectReferenceKeys(e,O)),fs&&this._injectReferenceKeys(e,w),u(us,O=>{this._injectReferenceKeys(r(O,this.payloadIncludedReference),O),this._pushPayload(r(O,"collectionName"),O)}),N=await this._pushPayload(e,w),c.alias&&this._addAlias(r(c,"alias"),N),I&&this.unloadRecord(C),l&&this.unloadRecord(N),this.requestHashIds[d]={isLoading:!1,isError:!1,isNew:!1,data:N,included:[],meta:ls},Promise.resolve(N)}catch(f){return S&&(h(C,"isError",!0),h(C,"isLoading",!1)),this.requestHashIds[d]={isLoading:!1,isError:!0,isNew:!1,data:f,included:[],meta:{}},Promise.reject(f)}}}query(s,e={},t={}){const i={resourceMethod:"get",resourceName:s,resourceId:null,resourceParams:e,resourcePayload:null,resourceFallback:[],resourceConfig:t},o=V,n=this._pushRequestHash(i,o);return this._request(i),n}queryRecord(s,e={},t={}){const i={resourceMethod:"get",resourceName:s,resourceId:null,resourceParams:e,resourcePayload:null,resourceFallback:{},resourceConfig:t},o=T,n=this._pushRequestHash(i,o);return this._request(i),n}findAll(s,e={}){const t={resourceMethod:"get",resourceName:s,resourceId:null,resourceParams:null,resourcePayload:null,resourceFallback:[],resourceConfig:e},i=V,o=this._pushRequestHash(t,i);return this._request(t),o}findRecord(s,e,t={},i={}){const o={resourceMethod:"get",resourceName:s,resourceId:Number(e),resourceParams:t,resourcePayload:null,resourceFallback:{},resourceConfig:i},n=T,c=this._pushRequestHash(o,n);return this._request(o),c}peekAll(s){return this.collections[s]}peekRecord(s,e){return b(this.collections[s],{id:e})}}return ds});
