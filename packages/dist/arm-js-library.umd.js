(function(u,A){typeof exports=="object"&&typeof module<"u"?module.exports=A(require("axios"),require("lodash"),require("mobx"),require("uuid"),require("crypto-js")):typeof define=="function"&&define.amd?define(["axios","lodash","mobx","uuid","crypto-js"],A):(u=typeof globalThis<"u"?globalThis:u||self,u["arm-js-library"]=A(u.axios,u._,u.mobx,u.uuid,u.CryptoJS))})(this,function(u,A,W,F,X){"use strict";function Y(O){const s=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(O){for(const e in O)if(e!=="default"){const t=Object.getOwnPropertyDescriptor(O,e);Object.defineProperty(s,e,t.get?t:{enumerable:!0,get:()=>O[e]})}}return s.default=O,Object.freeze(s)}const Z=Y(W),{makeObservable:K,observable:M,action:C,toJS:w}=Z,{get:r,set:c,find:j,findIndex:q,isObject:ss,isArray:y,isPlainObject:m,isNumber:v,isNull:es,isNil:z,isEmpty:S,isEqual:I,gte:P,lt:$,flatMap:ts,map:B,entries:is,forEach:f,keysIn:L,omit:N}=A,J={isLoading:!0,isError:!1,isNew:!0,data:[],included:[],meta:{}},U={isLoading:!0,isError:!1,isNew:!0,data:{},included:[],meta:{}},k=["destroyRecord","reload","save","set","get","setProperties","isDirty","isError","isLoading","isPristine"];class rs{constructor(s=[]){this.namespace="api/v1",this.host=window.location.origin,this.collections={},this.aliases={},this.requestHashIds={},this.payloadIncludedReference="type",this._initializeCollections(s),this._initializeAxiosConfig(),K(this,{collections:M,aliases:M,requestHashIds:M,_pushPayloadToCollection:C,_pushRequestHash:C,_addCollection:C,_addAlias:C})}_initializeAxiosConfig(){u.defaults.baseURL=this._getBaseURL()}_initializeCollections(s){f(s,e=>this._addCollection(e,[]))}_getBaseURL(){return`${this.host}/${this.namespace}`}_getAuthorizationToken(){return`Token ${window.localStorage.getItem("token")}`}_addCollection(s,e){this.collections[s]=e}_addAlias(s,e){const t=y(e),i=m(e);t&&(this.aliases[s]=e||[]),i&&(this.aliases[s]=e||{})}_generateHashId(s={id:F.v1()}){const e=JSON.stringify(s);return X.MD5(e).toString()}_getProperty(s){return r(this,s)}_setProperty(s,e){c(this,s,e);const t=N(w(this.originalRecord),k),i=N(w(this),k);I(t,i)?(c(this,"isDirty",!1),c(this,"isPristine",!0)):(c(this,"isDirty",!0),c(this,"isPristine",!1))}_setProperties(s){function e(n,d=""){return ts(is(n),([a,h])=>{const _=d?`${d}.${a}`:a;return ss(h)&&!y(h)&&h!==null?e(h,_):{key:_,value:h}})}const t=e(s);f(t,({key:n,value:d})=>c(this,n,d));const i=N(w(this.originalRecord),k),o=N(w(this),k);I(i,o)?(c(this,"isDirty",!1),c(this,"isPristine",!0)):(c(this,"isDirty",!0),c(this,"isPristine",!1))}unloadRecord(s){const e=L(this.aliases),t=r(s,"collectionName"),i=q(this.collections[t],{hashId:r(s,"hashId")});P(i,0)&&this.collections[t].splice(i,1),f(e,o=>{const n=y(this.aliases[o]),d=m(this.aliases[o]);if(n){const a=q(this.aliases[o],{hashId:r(s,"hashId")});P(a,0)&&this.aliases[o].splice(a,1)}d&&I(r(s,"hashId"),r(this.aliases[o],"hashId"))&&(this.aliases[o]={})})}_saveRecord(s){const e=r(s,"collectionName"),t=j(this.collections[e],{hashId:r(s,"hashId")}),i=v(r(t,"id")),o=i?r(t,"id"):null,h={resourceMethod:i?"put":"post",resourceName:e,resourceId:o,resourceParams:{},resourcePayload:{data:t},resourceFallback:{},resourceConfig:{}};return this._request(h)}async _deleteRecord(s){const e=j(this.collections[s.collectionName],{hashId:r(s,"hashId")}),t=r(s,"id"),n={resourceMethod:"delete",resourceName:r(e,"collectionName"),resourceId:t,resourceParams:{},resourcePayload:null,resourceFallback:{},resourceConfig:{}};return this._request(n)}async _reloadRecord(s){const e=r(s,"id"),o={resourceMethod:"get",resourceName:r(s,"collectionName"),resourceId:e,resourceParams:{},resourcePayload:null,resourceFallback:{},resourceConfig:{skip:!0}};return this._request(o)}_injectActions(s){const e={get:this._getProperty,set:this._setProperty,setProperties:this._setProperties,save:()=>this._saveRecord(s),destroyRecord:()=>this._deleteRecord(s),reload:()=>this._reloadRecord(s)},t=L(e);f(t,i=>{s[i]=e[i]})}_injectReferenceKeys(s,e,t=null){const i=es(t)?this._generateHashId({id:r(e,"id"),collectionName:r(e,"collectionName")}):t;c(e,"collectionName",s),c(e,"hashId",i),c(e,"isLoading",!1),c(e,"isError",!1),c(e,"isPristine",!0),c(e,"isDirty",!1)}_pushPayloadToCollection(s,e){const t=y(e),i=m(e),o=L(this.aliases);let n=null;if(t){const d=B(e,"hashId");f(e,a=>{const h=q(this.collections[s],{hashId:r(a,"hashId")});this._injectActions(a),$(h,0)&&this.collections[s].push(a),P(h,0)&&(this.collections[s][h]=a)}),n=B(d,a=>j(this.collections[s],{hashId:a})),f(o,a=>{const h=y(this.aliases[a]),_=m(this.aliases[a]);h&&f(n,p=>{const g=q(this.aliases[a],{hashId:r(p,"hashId")});P(g,0)&&(this.aliases[a][g]=p)}),_&&f(n,p=>{I(r(p,"hashId"),r(this.aliases[a],"hashId"))&&(this.aliases[a]=p)})})}if(i){const d=e.hashId,a=q(this.collections[s],{hashId:r(e,"hashId")});this._injectActions(e),$(a,0)&&this.collections[s].push(e),P(a,0)&&(this.collections[s][a]=e),n=j(this.collections[s],{hashId:d}),f(o,h=>{const _=y(this.aliases[h]),p=m(this.aliases[h]);_&&f([n],g=>{const x=q(this.aliases[h],{hashId:r(g,"hashId")});P(x,0)&&(this.aliases[h][x]=g)}),p&&I(r(n,"hashId"),r(this.aliases[h],"hashId"))&&(this.aliases[h]=n)})}return n}_pushRequestHash(s={},e={isLoading:!0,isError:!1,isNew:!0,data:null}){const t=this._generateHashId(s),i=!z(this.requestHashIds[t]),o=r(e,"isNew");return i&&o?c(this.requestHashIds[t],"isNew",!1):this.requestHashIds[t]=e,this.requestHashIds[t]}setHost(s){this.host=s,this._initializeAxiosConfig()}setNamespace(s){this.namespace=s}setHeadersCommon(s,e){u.defaults.headers.common[`${s}`]=e}setPayloadIncludeReference(s){this.payloadIncludedReference=s}setGlobal(){window&&(window.ARM=Object.freeze(this))}getCollection(s){return this.collections[s]||[]}clearCollection(s){this.collections[s]=[]}getAlias(s,e){return m(e)&&this._injectActions(e),this.aliases[s]||e}createRecord(s,e={}){return c(e,"id",F.v1()),this._injectReferenceKeys(s,e),this._injectActions(e),this.collections[s].push(e),j(this.collections[s],{hashId:r(e,"hashId")})}async _request({resourceMethod:s,resourceName:e,resourceId:t,resourceParams:i,resourcePayload:o,resourceFallback:n,resourceConfig:d}){var V,G,Q;const a={method:s,url:e},h=this._generateHashId({...arguments[0]}),_=r(d,"skip")||!1,p=I(s,"get"),g=I(s,"delete"),x=I(s,"post"),os=v(t),as=!S(i),D=!S(o),E=r(o,"data")||null;if(os&&c(a,"url",`${e}/${t}`),as&&c(a,"params",i),D&&c(a,"data",o),p&&!_){const l=this.requestHashIds[h],b=!z(l),T=r(l,"isNew");if(b&&!T)return}D&&c(E,"isLoading",!0);try{const l=await u(a),b=((V=l==null?void 0:l.data)==null?void 0:V.data)||n,T=((G=l==null?void 0:l.data)==null?void 0:G.included)||[],ns=((Q=l==null?void 0:l.data)==null?void 0:Q.meta)||{},cs=m(b),hs=y(b);let H=null;return hs&&f(b,R=>this._injectReferenceKeys(e,R)),cs&&this._injectReferenceKeys(e,b),f(T,R=>{this._injectReferenceKeys(r(R,this.payloadIncludedReference),R),this._pushPayloadToCollection(r(R,"collectionName"),R)}),H=await this._pushPayloadToCollection(e,b),d.alias&&this._addAlias(r(d,"alias"),H),x&&this.unloadRecord(E),g&&this.unloadRecord(H),this.requestHashIds[h]={isLoading:!1,isError:!1,isNew:!1,data:H,included:[],meta:ns},Promise.resolve(H)}catch(l){return D&&(c(E,"isError",!0),c(E,"isLoading",!1)),this.requestHashIds[h]={isLoading:!1,isError:!0,isNew:!1,data:l,included:[],meta:{}},Promise.reject(l)}}query(s,e={},t={}){const i={resourceMethod:"get",resourceName:s,resourceId:null,resourceParams:e,resourcePayload:null,resourceFallback:[],resourceConfig:t},o=J,n=this._pushRequestHash(i,o);return this._request(i),n}queryRecord(s,e={},t={}){const i={resourceMethod:"get",resourceName:s,resourceId:null,resourceParams:e,resourcePayload:null,resourceFallback:{},resourceConfig:t},o=U,n=this._pushRequestHash(i,o);return this._request(i),n}findAll(s,e={}){const t={resourceMethod:"get",resourceName:s,resourceId:null,resourceParams:null,resourcePayload:null,resourceFallback:[],resourceConfig:e},i=J,o=this._pushRequestHash(t,i);return this._request(t),o}findRecord(s,e,t={},i={}){const o={resourceMethod:"get",resourceName:s,resourceId:e,resourceParams:t,resourcePayload:null,resourceFallback:{},resourceConfig:i},n=U,d=this._pushRequestHash(o,n);return this._request(o),d}peekAll(s){return this.collections[s]}peekRecord(s,e){return j(this.collections[s],{id:e})}}return rs});
