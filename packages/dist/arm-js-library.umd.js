(function(p,C){typeof exports=="object"&&typeof module<"u"?module.exports=C(require("axios"),require("lodash"),require("mobx"),require("uuid"),require("crypto-js")):typeof define=="function"&&define.amd?define(["axios","lodash","mobx","uuid","crypto-js"],C):(p=typeof globalThis<"u"?globalThis:p||self,p["arm-js-library"]=C(p.axios,p._,p.mobx,p.uuid,p.CryptoJS))})(this,function(p,C,ss,F,es){"use strict";function ts(O){const s=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(O){for(const e in O)if(e!=="default"){const i=Object.getOwnPropertyDescriptor(O,e);Object.defineProperty(s,e,i.get?i:{enumerable:!0,get:()=>O[e]})}}return s.default=O,Object.freeze(s)}const is=ts(ss),{makeObservable:rs,observable:D,action:E,toJS:L}=is,{get:t,set:h,find:b,findIndex:j,isObject:os,isArray:m,isPlainObject:q,isNumber:J,isNull:as,isNil:v,isEmpty:z,isEqual:_,gte:R,lt:U,flatMap:ns,map:V,entries:cs,forEach:l,keysIn:M,omit:w}=C,G={isLoading:!0,isError:!1,isNew:!0,data:[],included:[],meta:{}},S={isLoading:!0,isError:!1,isNew:!0,data:{},included:[],meta:{}},T=["destroyRecord","getCollection","reload","save","set","get","setProperties","isDirty","isError","isLoading","isPristine"],hs=["destroyRecord","getCollection","reload","save","set","get","setProperties","isDirty","isError","isLoading","isPristine","hashId","collectionName"];class ds{constructor(s=[]){this.namespace="api/v1",this.host=typeof window<"u"?window.location.origin:"",this.collections={},this.aliases={},this.requestHashIds={},this.payloadIncludedReference="type",this._initializeCollections(s),this._initializeAxiosConfig(),rs(this,{collections:D,aliases:D,requestHashIds:D,_pushPayloadToCollection:E,_pushRequestHash:E,_addCollection:E,_addAlias:E})}_initializeAxiosConfig(){p.defaults.baseURL=this._getBaseURL()}_initializeCollections(s){l(s,e=>this._addCollection(e,[]))}_getBaseURL(){return`${this.host}/${this.namespace}`}_getAuthorizationToken(){return`Token ${window.localStorage.getItem("token")}`}_addCollection(s,e){this.collections[s]=e}_addAlias(s,e){const i=m(e),r=q(e);i&&(this.aliases[s]=e||[]),r&&(this.aliases[s]=e||{})}_generateHashId(s={id:F.v1()}){const e=JSON.stringify(s);return es.MD5(e).toString()}_getProperty(s){return t(this,s)}_setProperty(s,e){h(this,s,e);const i=w(L(this.originalRecord),T),r=w(L(this),T);_(i,r)?(h(this,"isDirty",!1),h(this,"isPristine",!0)):(h(this,"isDirty",!0),h(this,"isPristine",!1))}_setProperties(s){function e(d,a=""){return ns(cs(d),([u,n])=>{const c=a?`${a}.${u}`:u;return os(n)&&!m(n)&&n!==null?e(n,c):{key:c,value:n}})}const i=e(s);l(i,({key:d,value:a})=>h(this,d,a));const r=w(L(this.originalRecord),T),o=w(L(this),T);_(r,o)?(h(this,"isDirty",!1),h(this,"isPristine",!0)):(h(this,"isDirty",!0),h(this,"isPristine",!1))}unloadRecord(s){const e=M(this.aliases),i=t(s,"collectionName"),r=j(this.collections[i],{hashId:t(s,"hashId")});R(r,0)&&this.collections[i].splice(r,1),l(e,o=>{const d=m(this.aliases[o]),a=q(this.aliases[o]);if(d){const u=j(this.aliases[o],{hashId:t(s,"hashId")});R(u,0)&&this.aliases[o].splice(u,1)}a&&_(t(s,"hashId"),t(this.aliases[o],"hashId"))&&(this.aliases[o]={})})}_saveRecord(s){const e=t(s,"collectionName"),i=b(this.collections[e],{hashId:t(s,"hashId")}),r=J(t(i,"id")),o=r?t(i,"id"):null,d=e,a=r?"put":"post",u={data:i},n={resourceMethod:a,resourceName:d,resourceId:Number(o),resourceParams:{},resourcePayload:u,resourceFallback:{},resourceConfig:{}};return this._request(n)}async _deleteRecord(s){const e=t(s,"collectionName"),i=b(this.collections[e],{hashId:t(s,"hashId")}),r=t(s,"id"),a={resourceMethod:"delete",resourceName:t(i,"collectionName"),resourceId:Number(r),resourceParams:{},resourcePayload:null,resourceFallback:{},resourceConfig:{}};return this._request(a)}async _reloadRecord(s){const e=t(s,"id"),o={resourceMethod:"get",resourceName:t(s,"collectionName"),resourceId:Number(e),resourceParams:{},resourcePayload:null,resourceFallback:{},resourceConfig:{skipTimestamp:F.v1()}};return this._request(o)}_getCollectionRecord(s,e={},i){const r=t(e,"referenceKey")||"",o=t(e,"async")||!1,d=t(i,r)||[],a=D([]);return l(d,u=>{const n=this._generateHashId({id:t(u,"id"),collectionName:s}),c=b(this.collections[s],{hashId:n});if(!z(c))a.push(c);else if(o){const y={resourceMethod:"get",resourceName:s,resourceId:t(u,"id"),resourceParams:{},resourcePayload:null,resourceFallback:{},resourceConfig:{}},I=S;this._pushRequestHash(y,I),this._request(y)}}),a}_injectActions(s){const e={get:this._getProperty,set:this._setProperty,setProperties:this._setProperties,save:()=>this._saveRecord(s),destroyRecord:()=>this._deleteRecord(s),reload:()=>this._reloadRecord(s),getCollection:(r,o)=>this._getCollectionRecord(r,o,s)},i=M(e);l(i,r=>{s[r]=e[r]})}_injectReferenceKeys(s,e,i=null){const r=as(i)?this._generateHashId({id:t(e,"id"),collectionName:s}):i;h(e,"collectionName",s),h(e,"hashId",r),h(e,"isLoading",!1),h(e,"isError",!1),h(e,"isPristine",!0),h(e,"isDirty",!1)}_pushPayloadToCollection(s,e){const i=m(e),r=q(e),o=M(this.aliases),d=M(this.requestHashIds);let a=null;if(i){const u=V(e,"hashId");l(e,n=>{const c=j(this.collections[s],{hashId:t(n,"hashId")});this._injectActions(n),U(c,0)&&this.collections[s].push(n),R(c,0)&&(this.collections[s][c]=n)}),a=V(u,n=>b(this.collections[s],{hashId:n})),l(o,n=>{const c=m(this.aliases[n]),y=q(this.aliases[n]);c&&l(a,I=>{const g=j(this.aliases[n],{hashId:t(I,"hashId")});R(g,0)&&(this.aliases[n][g]=I)}),y&&l(a,I=>{_(t(I,"hashId"),t(this.aliases[n],"hashId"))&&(this.aliases[n]=I)})})}if(r){const u=e.hashId,n=j(this.collections[s],{hashId:t(e,"hashId")});this._injectActions(e),U(n,0)&&this.collections[s].push(e),R(n,0)&&(this.collections[s][n]=e),a=b(this.collections[s],{hashId:u}),l(o,c=>{const y=m(this.aliases[c]),I=q(this.aliases[c]);y&&l([a],g=>{const P=j(this.aliases[c],{hashId:t(g,"hashId")});R(P,0)&&(this.aliases[c][P]=g)}),I&&_(t(a,"hashId"),t(this.aliases[c],"hashId"))&&(this.aliases[c]=a)}),l(d,c=>{const y=t(this.requestHashIds[c],"data"),I=m(y),g=q(y);I&&l([a],P=>{const H=j(t(this.requestHashIds[c],"data"),{hashId:t(P,"hashId")});R(H,0)&&(this.requestHashIds[c].data[H]=P)}),g&&_(t(a,"hashId"),t(this.requestHashIds[c],"data.hashId"))&&h(this.requestHashIds[c],"data",a)})}return a}_pushRequestHash(s={},e={isLoading:!0,isError:!1,isNew:!0,data:null}){const i=this._generateHashId(s),r=!v(this.requestHashIds[i]),o=t(e,"isNew");return r&&o?h(this.requestHashIds[i],"isNew",!1):this.requestHashIds[i]=e,this.requestHashIds[i]}setHost(s){this.host=s,this._initializeAxiosConfig()}setNamespace(s){this.namespace=s}setHeadersCommon(s,e){p.defaults.headers.common[`${s}`]=e}setPayloadIncludeReference(s){this.payloadIncludedReference=s}setGlobal(){typeof window<"u"&&(window.ARM=Object.freeze(this))}getCollection(s){return this.collections[s]||[]}clearCollection(s){this.collections[s]=[]}getAlias(s,e){return q(e)&&this._injectActions(e),this.aliases[s]||e}createRecord(s,e={}){return h(e,"id",F.v1()),this._injectReferenceKeys(s,e),this._injectActions(e),this.collections[s].push(e),b(this.collections[s],{hashId:t(e,"hashId")})}async _request({resourceMethod:s,resourceName:e,resourceId:i,resourceParams:r,resourcePayload:o,resourceFallback:d,resourceConfig:a}){var Y,Z,K;const u={method:s,url:e},n=this._generateHashId({...arguments[0]}),c=_(s,"get"),y=_(s,"delete"),I=_(s,"post"),g=J(i),P=!z(r),H=!z(o),N=t(o,"data")||null;if(g&&h(u,"url",`${e}/${i}`),P&&h(u,"params",r),H){const f={data:w(N,hs)};h(u,"data",f)}const $=!v(t(a,"skip")),Q=_(t(a,"skip"),!0),B=this.requestHashIds[n],W=!v(B),X=t(B,"isNew");if(_(t(B,"isLoading"),!0),!(c&&($&&Q||!$&&W&&!X||$&&!Q&&W&&!X))){H&&h(N,"isLoading",!0);try{const f=await p(u),k=((Y=f==null?void 0:f.data)==null?void 0:Y.data)||d,us=((Z=f==null?void 0:f.data)==null?void 0:Z.included)||[],ls=((K=f==null?void 0:f.data)==null?void 0:K.meta)||{},fs=q(k),Is=m(k);let x=null;return Is&&l(k,A=>this._injectReferenceKeys(e,A)),fs&&this._injectReferenceKeys(e,k),l(us,A=>{this._injectReferenceKeys(t(A,this.payloadIncludedReference),A),this._pushPayloadToCollection(t(A,"collectionName"),A)}),x=await this._pushPayloadToCollection(e,k),a.alias&&this._addAlias(t(a,"alias"),x),I&&this.unloadRecord(N),y&&this.unloadRecord(x),this.requestHashIds[n]={isLoading:!1,isError:!1,isNew:!1,data:x,included:[],meta:ls},Promise.resolve(x)}catch(f){return H&&(h(N,"isError",!0),h(N,"isLoading",!1)),this.requestHashIds[n]={isLoading:!1,isError:!0,isNew:!1,data:f,included:[],meta:{}},Promise.reject(f)}}}query(s,e={},i={}){const r={resourceMethod:"get",resourceName:s,resourceId:null,resourceParams:e,resourcePayload:null,resourceFallback:[],resourceConfig:i},o=G,d=this._pushRequestHash(r,o);return this._request(r),d}queryRecord(s,e={},i={}){const r={resourceMethod:"get",resourceName:s,resourceId:null,resourceParams:e,resourcePayload:null,resourceFallback:{},resourceConfig:i},o=S,d=this._pushRequestHash(r,o);return this._request(r),d}findAll(s,e={}){const i={resourceMethod:"get",resourceName:s,resourceId:null,resourceParams:null,resourcePayload:null,resourceFallback:[],resourceConfig:e},r=G,o=this._pushRequestHash(i,r);return this._request(i),o}findRecord(s,e,i={},r={}){const o={resourceMethod:"get",resourceName:s,resourceId:Number(e),resourceParams:i,resourcePayload:null,resourceFallback:{},resourceConfig:r},d=S,a=this._pushRequestHash(o,d);return this._request(o),a}peekAll(s){return this.collections[s]}peekRecord(s,e){return b(this.collections[s],{id:e})}}return ds});
