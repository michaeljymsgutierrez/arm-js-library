(function(I,C){typeof exports=="object"&&typeof module<"u"?module.exports=C(require("axios"),require("lodash"),require("mobx"),require("uuid"),require("crypto-js")):typeof define=="function"&&define.amd?define(["axios","lodash","mobx","uuid","crypto-js"],C):(I=typeof globalThis<"u"?globalThis:I||self,I["arm-js-library"]=C(I.axios,I._,I.mobx,I.uuid,I.CryptoJS))})(this,function(I,C,ss,D,es){"use strict";function ts(O){const s=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(O){for(const e in O)if(e!=="default"){const i=Object.getOwnPropertyDescriptor(O,e);Object.defineProperty(s,e,i.get?i:{enumerable:!0,get:()=>O[e]})}}return s.default=O,Object.freeze(s)}const is=ts(ss),{makeObservable:rs,observable:E,action:L,toJS:M}=is,{get:r,set:n,find:q,findIndex:j,isObject:os,isArray:R,isPlainObject:g,isNumber:B,isNull:as,isNil:F,isEmpty:z,isEqual:y,gte:P,lt:J,flatMap:ns,map:U,entries:cs,forEach:l,keysIn:v,omit:w}=C,V={isLoading:!0,isError:!1,isNew:!0,data:[],included:[],meta:{}},S={isLoading:!0,isError:!1,isNew:!0,data:{},included:[],meta:{}},T=["destroyRecord","getCollection","reload","save","set","get","setProperties","isDirty","isError","isLoading","isPristine"],hs=["destroyRecord","getCollection","reload","save","set","get","setProperties","isDirty","isError","isLoading","isPristine","hashId","collectionName"];class ds{constructor(s=[]){this.namespace="api/v1",this.host=typeof window<"u"?window.location.origin:"",this.collections={},this.aliases={},this.requestHashIds={},this.payloadIncludedReference="type",this._initializeCollections(s),this._initializeAxiosConfig(),rs(this,{collections:E,aliases:E,requestHashIds:E,_pushPayload:L,_pushRequestHash:L,_addCollection:L,_addAlias:L})}_initializeAxiosConfig(){I.defaults.baseURL=this._getBaseURL()}_initializeCollections(s){l(s,e=>this._addCollection(e,[]))}_getBaseURL(){return`${this.host}/${this.namespace}`}_getAuthorizationToken(){return`Token ${window.localStorage.getItem("token")}`}_addCollection(s,e){this.collections[s]=e}_addAlias(s,e){const i=R(e),t=g(e);i&&(this.aliases[s]=e||[]),t&&(this.aliases[s]=e||{})}_generateHashId(s={id:D.v1()}){const e=JSON.stringify(s);return es.MD5(e).toString()}_getProperty(s){return r(this,s)}_setProperty(s,e){n(this,s,e);const i=w(M(this.originalRecord),T),t=w(M(this),T);y(i,t)?(n(this,"isDirty",!1),n(this,"isPristine",!0)):(n(this,"isDirty",!0),n(this,"isPristine",!1))}_setProperties(s){function e(d,a=""){return ns(cs(d),([c,u])=>{const h=a?`${a}.${c}`:c;return os(u)&&!R(u)&&u!==null?e(u,h):{key:h,value:u}})}const i=e(s);l(i,({key:d,value:a})=>n(this,d,a));const t=w(M(this.originalRecord),T),o=w(M(this),T);y(t,o)?(n(this,"isDirty",!1),n(this,"isPristine",!0)):(n(this,"isDirty",!0),n(this,"isPristine",!1))}unloadRecord(s){const e=v(this.aliases),i=r(s,"collectionName"),t=j(this.collections[i],{hashId:r(s,"hashId")});P(t,0)&&this.collections[i].splice(t,1),l(e,o=>{const d=R(this.aliases[o]),a=g(this.aliases[o]);if(d){const c=j(this.aliases[o],{hashId:r(s,"hashId")});P(c,0)&&this.aliases[o].splice(c,1)}a&&y(r(s,"hashId"),r(this.aliases[o],"hashId"))&&(this.aliases[o]={})})}_saveRecord(s){const e=r(s,"collectionName"),i=q(this.collections[e],{hashId:r(s,"hashId")}),t=B(r(i,"id")),o=t?r(i,"id"):null,u={resourceMethod:t?"put":"post",resourceName:e,resourceId:o,resourceParams:{},resourcePayload:{data:i},resourceFallback:{},resourceConfig:{}};return this._request(u)}async _deleteRecord(s){const e=r(s,"collectionName"),i=q(this.collections[e],{hashId:r(s,"hashId")}),t=r(s,"id"),a={resourceMethod:"delete",resourceName:r(i,"collectionName"),resourceId:Number(t),resourceParams:{},resourcePayload:null,resourceFallback:{},resourceConfig:{}};return this._request(a)}async _reloadRecord(s){const e=r(s,"id"),o={resourceMethod:"get",resourceName:r(s,"collectionName"),resourceId:Number(e),resourceParams:{},resourcePayload:null,resourceFallback:{},resourceConfig:{skipId:D.v1()}};return this._request(o)}_getCollectionRecord(s,e={},i){const t=r(e,"referenceKey")||"",o=r(e,"async")||!1,d=r(i,t)||[],c=g(d)?[d]:d,u=E([]);return l(c,h=>{const f=this._generateHashId({id:r(h,"id"),collectionName:s}),_=q(this.collections[s],{hashId:f});if(!z(_))u.push(_);else if(o){const m={resourceMethod:"get",resourceName:s,resourceId:r(h,"id"),resourceParams:{},resourcePayload:null,resourceFallback:{},resourceConfig:{}},b=S;this._pushRequestHash(m,b),this._request(m)}}),u}_injectActions(s){const e={get:this._getProperty,set:this._setProperty,setProperties:this._setProperties,save:()=>this._saveRecord(s),destroyRecord:()=>this._deleteRecord(s),reload:()=>this._reloadRecord(s),getCollection:(t,o)=>this._getCollectionRecord(t,o,s)},i=v(e);l(i,t=>{s[t]=e[t]})}_injectReferenceKeys(s,e,i=null){const t=as(i)?this._generateHashId({id:r(e,"id"),collectionName:s}):i;n(e,"collectionName",s),n(e,"hashId",t),n(e,"isLoading",!1),n(e,"isError",!1),n(e,"isPristine",!0),n(e,"isDirty",!1)}_pushToCollection(s,e){const i=U(e,"hashId");return l(e,t=>{const o=j(this.collections[s],{hashId:r(t,"hashId")});this._injectActions(t),J(o,0)&&this.collections[s].push(t),P(o,0)&&(this.collections[s][o]=t)}),U(i,t=>q(this.collections[s],{hashId:t}))}_pushPayload(s,e){const i=R(e),t=g(e),o=v(this.aliases),d=v(this.requestHashIds);let a=null;if(i&&(a=this._pushToCollection(s,e),l(o,c=>{const u=R(this.aliases[c]),h=g(this.aliases[c]);u&&l(a,f=>{const _=j(this.aliases[c],{hashId:r(f,"hashId")});P(_,0)&&(this.aliases[c][_]=f)}),h&&l(a,f=>{y(r(f,"hashId"),r(this.aliases[c],"hashId"))&&(this.aliases[c]=f)})})),t){const c=e.hashId,u=j(this.collections[s],{hashId:r(e,"hashId")});this._injectActions(e),J(u,0)&&this.collections[s].push(e),P(u,0)&&(this.collections[s][u]=e),a=q(this.collections[s],{hashId:c}),l(o,h=>{const f=R(this.aliases[h]),_=g(this.aliases[h]);f&&l([a],m=>{const b=j(this.aliases[h],{hashId:r(m,"hashId")});P(b,0)&&(this.aliases[h][b]=m)}),_&&y(r(a,"hashId"),r(this.aliases[h],"hashId"))&&(this.aliases[h]=a)}),l(d,h=>{const f=r(this.requestHashIds[h],"data"),_=R(f),m=g(f);_&&l([a],b=>{const H=j(r(this.requestHashIds[h],"data"),{hashId:r(b,"hashId")});P(H,0)&&(this.requestHashIds[h].data[H]=b)}),m&&y(r(a,"hashId"),r(this.requestHashIds[h],"data.hashId"))&&n(this.requestHashIds[h],"data",a)})}return a}_pushRequestHash(s={},e={isLoading:!0,isError:!1,isNew:!0,data:null}){const i=this._generateHashId(s),t=!F(this.requestHashIds[i]),o=r(e,"isNew");return t&&o?n(this.requestHashIds[i],"isNew",!1):this.requestHashIds[i]=e,this.requestHashIds[i]}setHost(s){this.host=s,this._initializeAxiosConfig()}setNamespace(s){this.namespace=s}setHeadersCommon(s,e){I.defaults.headers.common[`${s}`]=e}setPayloadIncludeReference(s){this.payloadIncludedReference=s}setGlobal(){typeof window<"u"&&(window.ARM=Object.freeze(this))}getCollection(s){return this.collections[s]||[]}clearCollection(s){this.collections[s]=[]}getAlias(s,e){return g(e)&&this._injectActions(e),this.aliases[s]||e}createRecord(s,e={},i=!0){const t=i?D.v1():D.NIL,o=F(q(this.collections[s],{id:t}));return n(e,"id",t),this._injectReferenceKeys(s,e),this._injectActions(e),o&&this.collections[s].push(e),q(this.collections[s],{id:t})}async _request({resourceMethod:s,resourceName:e,resourceId:i,resourceParams:t,resourcePayload:o,resourceFallback:d,resourceConfig:a}){var Y,Z,K;const c={method:s,url:e},u=this._generateHashId({...arguments[0]}),h=y(s,"get"),f=y(s,"delete"),_=y(s,"post"),m=B(i),b=!z(t),H=!z(o),N=r(o,"data")||null;if(m&&n(c,"url",`${e}/${i}`),b&&n(c,"params",t),H){const p={data:w(N,hs)};n(c,"data",p)}const $=!F(r(a,"skip")),G=y(r(a,"skip"),!0),Q=this.requestHashIds[u],W=!F(Q),X=r(Q,"isNew");if(!(h&&($&&G||!$&&W&&!X||$&&!G&&W&&!X))){H&&n(N,"isLoading",!0);try{const p=await I(c),k=((Y=p==null?void 0:p.data)==null?void 0:Y.data)||d,us=((Z=p==null?void 0:p.data)==null?void 0:Z.included)||[],ls=((K=p==null?void 0:p.data)==null?void 0:K.meta)||{},fs=g(k),ps=R(k);let x=null;return ps&&l(k,A=>this._injectReferenceKeys(e,A)),fs&&this._injectReferenceKeys(e,k),l(us,A=>{this._injectReferenceKeys(r(A,this.payloadIncludedReference),A),this._pushPayload(r(A,"collectionName"),A)}),x=await this._pushPayload(e,k),a.alias&&this._addAlias(r(a,"alias"),x),_&&this.unloadRecord(N),f&&this.unloadRecord(x),this.requestHashIds[u]={isLoading:!1,isError:!1,isNew:!1,data:x,included:[],meta:ls},Promise.resolve(x)}catch(p){return H&&(n(N,"isError",!0),n(N,"isLoading",!1)),this.requestHashIds[u]={isLoading:!1,isError:!0,isNew:!1,data:p,included:[],meta:{}},Promise.reject(p)}}}query(s,e={},i={}){const t={resourceMethod:"get",resourceName:s,resourceId:null,resourceParams:e,resourcePayload:null,resourceFallback:[],resourceConfig:i},o=V,d=this._pushRequestHash(t,o);return this._request(t),d}queryRecord(s,e={},i={}){const t={resourceMethod:"get",resourceName:s,resourceId:null,resourceParams:e,resourcePayload:null,resourceFallback:{},resourceConfig:i},o=S,d=this._pushRequestHash(t,o);return this._request(t),d}findAll(s,e={}){const i={resourceMethod:"get",resourceName:s,resourceId:null,resourceParams:null,resourcePayload:null,resourceFallback:[],resourceConfig:e},t=V,o=this._pushRequestHash(i,t);return this._request(i),o}findRecord(s,e,i={},t={}){const o={resourceMethod:"get",resourceName:s,resourceId:Number(e),resourceParams:i,resourcePayload:null,resourceFallback:{},resourceConfig:t},d=S,a=this._pushRequestHash(o,d);return this._request(o),a}peekAll(s){return this.collections[s]}peekRecord(s,e){return q(this.collections[s],{id:e})}}return ds});
