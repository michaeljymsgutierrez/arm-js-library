(function(f,P){typeof exports=="object"&&typeof module<"u"?module.exports=P(require("axios"),require("lodash"),require("mobx"),require("uuid"),require("crypto-js")):typeof define=="function"&&define.amd?define(["axios","lodash","mobx","uuid","crypto-js"],P):(f=typeof globalThis<"u"?globalThis:f||self,f["arm-js-library"]=P(f.axios,f._,f.mobx,f.uuid,f.CryptoJS))})(this,function(f,P,rs,k,os){"use strict";function as(j){const s=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(j){for(const e in j)if(e!=="default"){const t=Object.getOwnPropertyDescriptor(j,e);Object.defineProperty(s,e,t.get?t:{enumerable:!0,get:()=>j[e]})}}return s.default=j,Object.freeze(s)}const ns=as(rs),{makeObservable:hs,observable:E,action:F,toJS:D}=ns,{get:r,set:h,find:q,findIndex:m,isObject:cs,isArray:y,isPlainObject:p,isNumber:$,isString:ds,isNull:Q,isNil:g,isEmpty:A,isEqual:I,gte:b,gt:us,lte:ls,lt:B,flatMap:fs,map:L,entries:ps,forEach:l,filter:Is,keysIn:C,omit:w,first:W,last:_s,orderBy:ys}=P,X={isLoading:!0,isError:!1,isNew:!0,data:[],included:[],meta:{}},z={isLoading:!0,isError:!1,isNew:!0,data:{},included:[],meta:{}},v=["destroyRecord","getCollection","reload","save","set","get","setProperties","isDirty","isError","isLoading","isPristine"],qs=["destroyRecord","getCollection","reload","save","set","get","setProperties","isDirty","isError","isLoading","isPristine","hashId","collectionName"];class ms{constructor(s=[]){this.namespace="api/v1",this.host=typeof window<"u"?window.location.origin:"",this.collections={},this.aliases={},this.requestHashIds={},this.payloadIncludedReference="type",this._initializeCollections(s),this._initializeAxiosConfig(),hs(this,{collections:E,aliases:E,requestHashIds:E,_pushPayload:F,_pushRequestHash:F,_addCollection:F,_addAlias:F})}_initializeAxiosConfig(){f.defaults.baseURL=this._getBaseURL()}_initializeCollections(s){l(s,e=>this._addCollection(e,[]))}_getBaseURL(){return`${this.host}/${this.namespace}`}_getAuthorizationToken(){return`Token ${window.localStorage.getItem("token")}`}_isCollectionExisting(s){if(g(r(this.collections,s)))throw`Collection ${s} does not exist.
Fix: Try adding ${s} on your ARM config initialization.`}_addCollection(s,e){this.collections[s]=e}_addAlias(s,e){const t=y(e),o=p(e);t&&(this.aliases[s]=e||[]),o&&(this.aliases[s]=e||{})}_generateHashId(s={id:k.v1()}){const e=JSON.stringify(s);return os.MD5(e).toString()}_getProperty(s){return r(this,s)}_setProperty(s,e){h(this,s,e);const t=w(D(this.originalRecord),v),o=w(D(this),v);I(t,o)?(h(this,"isDirty",!1),h(this,"isPristine",!0)):(h(this,"isDirty",!0),h(this,"isPristine",!1))}_setProperties(s){function e(a,n=""){return fs(ps(a),([d,c])=>{const _=n?`${n}.${d}`:d;return cs(c)&&!y(c)&&c!==null?e(c,_):{key:_,value:c}})}const t=e(s);l(t,({key:a,value:n})=>h(this,a,n));const o=w(D(this.originalRecord),v),i=w(D(this),v);I(o,i)?(h(this,"isDirty",!1),h(this,"isPristine",!0)):(h(this,"isDirty",!0),h(this,"isPristine",!1))}_unloadFromCollection(s){const e=r(s,"collectionName"),t=m(this.collections[e],{hashId:r(s,"hashId")});b(t,0)&&this.collections[e].splice(t,1)}_unloadFromRequestHashes(s){const e=C(this.requestHashIds);l(e,t=>{const o=r(this.requestHashIds[t],"data"),i=y(o),a=p(o);if(i){const n=m(r(this.requestHashIds[t],"data"),{hashId:r(s,"hashId")});b(n,0)&&this.requestHashIds[t].data.splice(n,1)}a&&I(r(s,"hashId"),r(this.requestHashIds[t],"data.hashId"))&&h(this.requestHashIds[t],"data",{})})}_unloadFromAliases(s){const e=C(this.aliases);l(e,t=>{const o=y(this.aliases[t]),i=p(this.aliases[t]);if(o){const a=m(this.aliases[t],{hashId:r(s,"hashId")});b(a,0)&&this.aliases[t].splice(a,1)}i&&I(r(s,"hashId"),r(this.aliases[t],"hashId"))&&(this.aliases[t]={})})}unloadRecord(s){this._unloadFromCollection(s),this._unloadFromRequestHashes(s),this._unloadFromAliases(s)}_saveRecord(s){const e=r(s,"collectionName"),t=q(this.collections[e],{hashId:r(s,"hashId")}),o=$(r(t,"id")),i=o?r(t,"id"):null,c={resourceMethod:o?"put":"post",resourceName:e,resourceId:i,resourceParams:{},resourcePayload:{data:t},resourceFallback:{},resourceConfig:{}};return this._request(c)}async _deleteRecord(s){const e=r(s,"collectionName"),t=q(this.collections[e],{hashId:r(s,"hashId")}),o=r(s,"id"),n={resourceMethod:"delete",resourceName:r(t,"collectionName"),resourceId:Number(o),resourceParams:{},resourcePayload:null,resourceFallback:{},resourceConfig:{}};return this._request(n)}async _reloadRecord(s){const e=r(s,"id"),i={resourceMethod:"get",resourceName:r(s,"collectionName"),resourceId:Number(e),resourceParams:{},resourcePayload:null,resourceFallback:{},resourceConfig:{skipId:k.v1()}};return this._request(i)}_getCollectionRecord(s,e={},t){const o=r(e,"referenceKey")||"",i=r(e,"async")||!1,a=r(t,o)||[],n=p(a),d=n?[a]:a,c=E([]);return l(d,_=>{const H=this._generateHashId({id:r(_,"id"),collectionName:s}),M=q(this.collections[s],{hashId:H});if(!A(M))c.push(M);else if(i){const T={resourceMethod:"get",resourceName:s,resourceId:r(_,"id"),resourceParams:{},resourcePayload:null,resourceFallback:{},resourceConfig:{}},S=z;this._pushRequestHash(T,S),this._request(T)}}),n?W(c):c}_injectActions(s){const e={get:this._getProperty,set:this._setProperty,setProperties:this._setProperties,save:()=>this._saveRecord(s),destroyRecord:()=>this._deleteRecord(s),reload:()=>this._reloadRecord(s),getCollection:(o,i)=>this._getCollectionRecord(o,i,s)},t=C(e);l(t,o=>{s[o]=e[o]})}_injectReferenceKeys(s,e,t=null){const o=Q(t)?this._generateHashId({id:r(e,"id"),collectionName:s}):t;h(e,"collectionName",s),h(e,"hashId",o),h(e,"isLoading",!1),h(e,"isError",!1),h(e,"isPristine",!0),h(e,"isDirty",!1)}_pushToCollection(s,e){const t=y(e),o=p(e);if(t){const i=L(e,"hashId");return l(e,a=>{const n=m(this.collections[s],{hashId:r(a,"hashId")});this._injectActions(a),B(n,0)&&this.collections[s].push(a),b(n,0)&&(this.collections[s][n]=a)}),L(i,a=>q(this.collections[s],{hashId:a}))}if(o){const i=e.hashId,a=m(this.collections[s],{hashId:r(e,"hashId")});return this._injectActions(e),B(a,0)&&this.collections[s].push(e),b(a,0)&&(this.collections[s][a]=e),q(this.collections[s],{hashId:i})}}_pushToAliases(s){const e=y(s),t=p(s),o=C(this.aliases);e&&l(o,i=>{const a=y(this.aliases[i]),n=p(this.aliases[i]);a&&l(s,d=>{const c=m(this.aliases[i],{hashId:r(d,"hashId")});b(c,0)&&(this.aliases[i][c]=d)}),n&&l(s,d=>{I(r(d,"hashId"),r(this.aliases[i],"hashId"))&&(this.aliases[i]=d)})}),t&&l(o,i=>{const a=y(this.aliases[i]),n=p(this.aliases[i]);a&&l([s],d=>{const c=m(this.aliases[i],{hashId:r(d,"hashId")});b(c,0)&&(this.aliases[i][c]=d)}),n&&I(r(s,"hashId"),r(this.aliases[i],"hashId"))&&(this.aliases[i]=s)})}_pushToRequestHashes(s){const e=C(this.requestHashIds),t=y(s),o=p(s);let i=null;t&&(i=s),o&&(i=[s]),l(e,a=>{const n=r(this.requestHashIds[a],"data"),d=y(n),c=p(n);l(i,_=>{if(d){const H=m(r(this.requestHashIds[a],"data"),{hashId:r(_,"hashId")});b(H,0)&&(this.requestHashIds[a].data[H]=_)}c&&I(r(_,"hashId"),r(this.requestHashIds[a],"data.hashId"))&&h(this.requestHashIds[a],"data",_)})})}_pushPayload(s,e){this._isCollectionExisting(s);const t=this._pushToCollection(s,e);return this._pushToAliases(t),this._pushToRequestHashes(t),t}_pushRequestHash(s={},e={isLoading:!0,isError:!1,isNew:!0,data:null}){const t=this._generateHashId(s),o=!g(this.requestHashIds[t]),i=r(e,"isNew");return o&&i?h(this.requestHashIds[t],"isNew",!1):this.requestHashIds[t]=e,this.requestHashIds[t]}setHost(s){this.host=s,this._initializeAxiosConfig()}setNamespace(s){this.namespace=s}setHeadersCommon(s,e){f.defaults.headers.common[`${s}`]=e}setPayloadIncludeReference(s){this.payloadIncludedReference=s}setGlobal(){typeof window<"u"&&(window.ARM=Object.freeze(this))}getCollection(s){return this.collections[s]||[]}clearCollection(s){this.collections[s]=[]}getAlias(s,e){return p(e)&&this._injectActions(e),this.aliases[s]||e}createRecord(s,e={},t=!0){const o=t?k.v1():k.NIL,i=g(q(this.collections[s],{id:o}));return h(e,"id",o),this._injectReferenceKeys(s,e),this._injectActions(e),i&&this.collections[s].push(e),q(this.collections[s],{id:o})}async _request({resourceMethod:s,resourceName:e,resourceId:t,resourceParams:o,resourcePayload:i,resourceFallback:a,resourceConfig:n}){var es,ts,is;const d={method:s,url:e},c=this._generateHashId({...arguments[0]}),_=I(s,"get"),H=I(s,"delete"),M=I(s,"post"),T=$(t)||ds(t),S=!A(o),U=!A(i),gs=!g(r(n,"override")),x=r(i,"data")||null;if(gs){const u=r(n,"override")||{};let R=g(r(u,"host"))?this.host:r(u,"host"),J=g(r(u,"namespace"))?this.namespace:r(u,"namespace"),V=`${R}/${J}`;h(d,"baseURL",V)}if(T&&h(d,"url",`${e}/${t}`),S&&h(d,"params",o),U){const u={data:w(x,qs)};h(d,"data",u)}const G=!g(r(n,"skip")),Y=I(r(n,"skip"),!0),Z=this.requestHashIds[c],K=!g(Z),ss=r(Z,"isNew");if(!(_&&(G&&Y||!G&&K&&!ss||G&&!Y&&K&&!ss))){U&&h(x,"isLoading",!0);try{const u=await f(d),R=((es=u==null?void 0:u.data)==null?void 0:es.data)||a,J=((ts=u==null?void 0:u.data)==null?void 0:ts.included)||[],V=((is=u==null?void 0:u.data)==null?void 0:is.meta)||{},bs=p(R),Rs=y(R);let N=null;return Rs&&l(R,O=>this._injectReferenceKeys(e,O)),bs&&this._injectReferenceKeys(e,R),l(J,O=>{this._injectReferenceKeys(r(O,this.payloadIncludedReference),O),this._pushPayload(r(O,"collectionName"),O)}),N=await this._pushPayload(e,R),n.alias&&this._addAlias(r(n,"alias"),N),M&&this.unloadRecord(x),H&&this.unloadRecord(N),this.requestHashIds[c]={isLoading:!1,isError:!1,isNew:!1,data:N,included:[],meta:V},Promise.resolve(N)}catch(u){return U&&(h(x,"isError",!0),h(x,"isLoading",!1)),this.requestHashIds[c]={isLoading:!1,isError:!0,isNew:!1,data:u,included:[],meta:{}},Promise.reject(u)}}}query(s,e={},t={}){const o={resourceMethod:"get",resourceName:s,resourceId:null,resourceParams:e,resourcePayload:null,resourceFallback:[],resourceConfig:t},i=X,a=this._pushRequestHash(o,i);return this._request(o),a}queryRecord(s,e={},t={}){const o={resourceMethod:"get",resourceName:s,resourceId:null,resourceParams:e,resourcePayload:null,resourceFallback:{},resourceConfig:t},i=z,a=this._pushRequestHash(o,i);return this._request(o),a}findAll(s,e={}){const t={resourceMethod:"get",resourceName:s,resourceId:null,resourceParams:null,resourcePayload:null,resourceFallback:[],resourceConfig:e},o=X,i=this._pushRequestHash(t,o);return this._request(t),i}findRecord(s,e,t={},o={}){const i={resourceMethod:"get",resourceName:s,resourceId:e,resourceParams:t,resourcePayload:null,resourceFallback:{},resourceConfig:o},a=z,n=this._pushRequestHash(i,a);return this._request(i),n}peekAll(s){return this.collections[s]}peekRecord(s,e){return q(this.collections[s],{id:e})}findBy(s,e={}){return q(s,e)}findIndexBy(s,e={}){return m(s,e)}filterBy(s,e={}){return Is(s,e)}sortBy(s,e=[]){const t=L(e,i=>W(i.split(":"))),o=L(e,i=>_s(i.split(":")));return ys(s,t,o)}isEmpty(s){return A(s)}isPresent(s){return!A(s)}isEqual(s,e){return I(s,e)}isNumber(s){return $(s)}isNil(s){return g(s)}isNull(s){return Q(s)}isGte(s,e){return b(s,e)}isGt(s,e){return us(s,e)}isLte(s,e){return ls(s,e)}isLt(s,e){return B(s,e)}}return ms});
