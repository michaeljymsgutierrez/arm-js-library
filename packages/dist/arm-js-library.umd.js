(function(f,C){typeof exports=="object"&&typeof module<"u"?module.exports=C(require("axios"),require("lodash"),require("mobx"),require("uuid"),require("crypto-js")):typeof define=="function"&&define.amd?define(["axios","lodash","mobx","uuid","crypto-js"],C):(f=typeof globalThis<"u"?globalThis:f||self,f["arm-js-library"]=C(f.axios,f._,f.mobx,f.uuid,f.CryptoJS))})(this,function(f,C,ns,F,hs){"use strict";function cs(H){const s=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(H){for(const e in H)if(e!=="default"){const t=Object.getOwnPropertyDescriptor(H,e);Object.defineProperty(s,e,t.get?t:{enumerable:!0,get:()=>H[e]})}}return s.default=H,Object.freeze(s)}const ds=cs(ns),{makeObservable:us,observable:L,action:v,toJS:B}=ds,{get:i,set:h,find:q,findIndex:m,isObject:ls,isArray:_,isPlainObject:p,isNumber:S,isString:fs,isNull:X,isNil:g,isEmpty:x,isEqual:I,gte:R,gt:ps,lte:Is,lt:z,flatMap:_s,map:D,entries:ys,forEach:l,filter:Y,keysIn:w,omit:N,first:Z,last:qs,orderBy:ms}=C,K={isLoading:!0,isError:!1,isNew:!0,data:[],included:[],meta:{}},U={isLoading:!0,isError:!1,isNew:!0,data:{},included:[],meta:{}},M=["destroyRecord","getCollection","reload","save","set","get","setProperties","isDirty","isError","isLoading","isPristine"],gs=["destroyRecord","getCollection","reload","save","set","get","setProperties","isDirty","isError","isLoading","isPristine","hashId","collectionName"];class Rs{constructor(s=[]){this.namespace="api/v1",this.host=typeof window<"u"?window.location.origin:"",this.collections={},this.aliases={},this.requestHashIds={},this.payloadIncludedReference="type",this._initializeCollections(s),this._initializeAxiosConfig(),us(this,{collections:L,aliases:L,requestHashIds:L,_pushPayload:v,_pushRequestHash:v,_addCollection:v,_addAlias:v})}_initializeAxiosConfig(){f.defaults.baseURL=this._getBaseURL()}_initializeCollections(s){l(s,e=>this._addCollection(e,[]))}_getBaseURL(){return`${this.host}/${this.namespace}`}_isCollectionExisting(s){if(g(i(this.collections,s)))throw`Collection ${s} does not exist.
Fix: Try adding ${s} on your ARM config initialization.`}_addCollection(s,e){this.collections[s]=e}_addAlias(s,e){const t=_(e),o=p(e);t&&(this.aliases[s]=e||[]),o&&(this.aliases[s]=e||{})}_generateHashId(s={id:F.v1()}){const e=JSON.stringify(s);return hs.MD5(e).toString()}_getProperty(s){return i(this,s)}_setProperty(s,e){h(this,s,e);const t=N(B(this.originalRecord),M),o=N(B(this),M);I(t,o)?(h(this,"isDirty",!1),h(this,"isPristine",!0)):(h(this,"isDirty",!0),h(this,"isPristine",!1))}_setProperties(s){function e(a,n=""){return _s(ys(a),([c,d])=>{const y=n?`${n}.${c}`:c;return ls(d)&&!_(d)&&d!==null?e(d,y):{key:y,value:d}})}const t=e(s);l(t,({key:a,value:n})=>h(this,a,n));const o=N(B(this.originalRecord),M),r=N(B(this),M);I(o,r)?(h(this,"isDirty",!1),h(this,"isPristine",!0)):(h(this,"isDirty",!0),h(this,"isPristine",!1))}_sortRecordsBy(s,e=[]){const t=D(e,r=>Z(r.split(":"))),o=D(e,r=>qs(r.split(":")));return ms(s,t,o)}_unloadFromCollection(s){const e=i(s,"collectionName"),t=m(this.collections[e],{hashId:i(s,"hashId")});R(t,0)&&this.collections[e].splice(t,1)}_unloadFromRequestHashes(s){const e=w(this.requestHashIds);l(e,t=>{const o=i(this.requestHashIds[t],"data"),r=_(o),a=p(o);if(r){const n=m(i(this.requestHashIds[t],"data"),{hashId:i(s,"hashId")});R(n,0)&&this.requestHashIds[t].data.splice(n,1)}a&&I(i(s,"hashId"),i(this.requestHashIds[t],"data.hashId"))&&h(this.requestHashIds[t],"data",{})})}_unloadFromAliases(s){const e=w(this.aliases);l(e,t=>{const o=_(this.aliases[t]),r=p(this.aliases[t]);if(o){const a=m(this.aliases[t],{hashId:i(s,"hashId")});R(a,0)&&this.aliases[t].splice(a,1)}r&&I(i(s,"hashId"),i(this.aliases[t],"hashId"))&&(this.aliases[t]={})})}unloadRecord(s){this._unloadFromCollection(s),this._unloadFromRequestHashes(s),this._unloadFromAliases(s)}_saveRecord(s){const e=i(s,"collectionName"),t=q(this.collections[e],{hashId:i(s,"hashId")}),o=S(i(t,"id")),r=o?i(t,"id"):null,d={resourceMethod:o?"put":"post",resourceName:e,resourceId:r,resourceParams:{},resourcePayload:{data:t},resourceFallback:{},resourceConfig:{}};return this._request(d)}async _deleteRecord(s){const e=i(s,"collectionName"),t=q(this.collections[e],{hashId:i(s,"hashId")}),o=i(s,"id"),n={resourceMethod:"delete",resourceName:i(t,"collectionName"),resourceId:Number(o),resourceParams:{},resourcePayload:null,resourceFallback:{},resourceConfig:{}};return this._request(n)}async _reloadRecord(s){const e=i(s,"id"),r={resourceMethod:"get",resourceName:i(s,"collectionName"),resourceId:Number(e),resourceParams:{},resourcePayload:null,resourceFallback:{},resourceConfig:{skipId:F.v1()}};return this._request(r)}_getCollectionRecord(s,e={},t){const o=i(e,"referenceKey")||"",r=i(e,"async")||!1,a=i(e,"filterBy")||{},n=i(e,"sortBy")||[],c=i(t,o)||[],d=p(c),y=d?[c]:c,b=L([]);return l(y,T=>{const O=this._generateHashId({id:i(T,"id"),collectionName:s}),$=q(this.collections[s],{hashId:O});if(!x($))b.push($);else if(r){const P={resourceMethod:"get",resourceName:s,resourceId:i(T,"id"),resourceParams:{},resourcePayload:null,resourceFallback:{},resourceConfig:{}},G=U;this._pushRequestHash(P,G),this._request(P)}}),d?Z(b):this._sortRecordsBy(Y(b,a),n)}_injectActions(s){const e={get:this._getProperty,set:this._setProperty,setProperties:this._setProperties,save:()=>this._saveRecord(s),destroyRecord:()=>this._deleteRecord(s),reload:()=>this._reloadRecord(s),getCollection:(o,r)=>this._getCollectionRecord(o,r,s)},t=w(e);l(t,o=>{s[o]=e[o]})}_injectReferenceKeys(s,e,t=null){const o=X(t)?this._generateHashId({id:i(e,"id"),collectionName:s}):t;h(e,"collectionName",s),h(e,"hashId",o),h(e,"isLoading",!1),h(e,"isResolving",!1),h(e,"isError",!1),h(e,"isPristine",!0),h(e,"isDirty",!1)}_pushToCollection(s,e){const t=_(e),o=p(e);if(t){const r=D(e,"hashId");return l(e,a=>{const n=m(this.collections[s],{hashId:i(a,"hashId")});this._injectActions(a),z(n,0)&&this.collections[s].push(a),R(n,0)&&(this.collections[s][n]=a)}),D(r,a=>q(this.collections[s],{hashId:a}))}if(o){const r=e.hashId,a=m(this.collections[s],{hashId:i(e,"hashId")});return this._injectActions(e),z(a,0)&&this.collections[s].push(e),R(a,0)&&(this.collections[s][a]=e),q(this.collections[s],{hashId:r})}}_pushToAliases(s){const e=_(s),t=p(s),o=w(this.aliases);e&&l(o,r=>{const a=_(this.aliases[r]),n=p(this.aliases[r]);a&&l(s,c=>{const d=m(this.aliases[r],{hashId:i(c,"hashId")});R(d,0)&&(this.aliases[r][d]=c)}),n&&l(s,c=>{I(i(c,"hashId"),i(this.aliases[r],"hashId"))&&(this.aliases[r]=c)})}),t&&l(o,r=>{const a=_(this.aliases[r]),n=p(this.aliases[r]);a&&l([s],c=>{const d=m(this.aliases[r],{hashId:i(c,"hashId")});R(d,0)&&(this.aliases[r][d]=c)}),n&&I(i(s,"hashId"),i(this.aliases[r],"hashId"))&&(this.aliases[r]=s)})}_pushToRequestHashes(s){const e=w(this.requestHashIds),t=_(s),o=p(s);let r=null;t&&(r=s),o&&(r=[s]),l(e,a=>{const n=i(this.requestHashIds[a],"data"),c=_(n),d=p(n);l(r,y=>{if(c){const b=m(i(this.requestHashIds[a],"data"),{hashId:i(y,"hashId")});R(b,0)&&(this.requestHashIds[a].data[b]=y)}d&&I(i(y,"hashId"),i(this.requestHashIds[a],"data.hashId"))&&h(this.requestHashIds[a],"data",y)})})}_pushPayload(s,e){this._isCollectionExisting(s);const t=this._pushToCollection(s,e);return this._pushToAliases(t),this._pushToRequestHashes(t),t}_pushRequestHash(s={},e={isLoading:!0,isError:!1,isNew:!0,data:null}){const t=this._generateHashId(s),o=!g(this.requestHashIds[t]),r=i(e,"isNew");return o&&r?h(this.requestHashIds[t],"isNew",!1):this.requestHashIds[t]=e,this.requestHashIds[t]}setHost(s){this.host=s,this._initializeAxiosConfig()}setNamespace(s){this.namespace=s}setHeadersCommon(s,e){f.defaults.headers.common[`${s}`]=e}setPayloadIncludeReference(s){this.payloadIncludedReference=s}setGlobal(){typeof window<"u"&&(window.ARM=Object.freeze(this))}getCollection(s){return this.collections[s]||[]}clearCollection(s){this.collections[s]=[]}getAlias(s,e){return p(e)&&this._injectActions(e),this.aliases[s]||e}createRecord(s,e={},t=!0){const o=t?F.v1():F.NIL,r=g(q(this.collections[s],{id:o}));return h(e,"id",o),this._injectReferenceKeys(s,e),this._injectActions(e),r&&this.collections[s].push(e),q(this.collections[s],{id:o})}async _request({resourceMethod:s,resourceName:e,resourceId:t,resourceParams:o,resourcePayload:r,resourceFallback:a,resourceConfig:n}){var rs,os,as;const c={method:s,url:e},d=this._generateHashId({...arguments[0]}),y=I(s,"get"),b=I(s,"delete"),T=I(s,"post"),O=S(t)||fs(t),$=!x(o),P=!x(r),G=!g(i(n,"override")),k=i(r,"data")||null,J=O?q(this.collections[e],{id:t}):null;if(G){const u=i(n,"override")||{};let j=g(i(u,"host"))?this.host:i(u,"host"),Q=g(i(u,"namespace"))?this.namespace:i(u,"namespace"),W=`${j}/${Q}`;h(c,"baseURL",W)}if(O&&h(c,"url",`${e}/${t}`),$&&h(c,"params",o),P){const u={data:N(k,gs)};h(c,"data",u)}const V=!g(i(n,"skip")),ss=I(i(n,"skip"),!0),es=this.requestHashIds[d],ts=!g(es),is=i(es,"isNew");if(!(y&&(V&&ss||!V&&ts&&!is||V&&!ss&&ts&&!is))){P&&h(k,"isLoading",!0),O&&h(J,"isLoading",!0);try{const u=await f(c),j=((rs=u==null?void 0:u.data)==null?void 0:rs.data)||a,Q=((os=u==null?void 0:u.data)==null?void 0:os.included)||[],W=((as=u==null?void 0:u.data)==null?void 0:as.meta)||{},bs=p(j),js=_(j);let E=null;return js&&l(j,A=>this._injectReferenceKeys(e,A)),bs&&this._injectReferenceKeys(e,j),l(Q,A=>{this._injectReferenceKeys(i(A,this.payloadIncludedReference),A),this._pushPayload(i(A,"collectionName"),A)}),E=await this._pushPayload(e,j),n.alias&&this._addAlias(i(n,"alias"),E),T&&this.unloadRecord(k),b&&this.unloadRecord(E),this.requestHashIds[d]={isLoading:!1,isError:!1,isNew:!1,data:E,included:[],meta:W},Promise.resolve(E)}catch(u){return P&&(h(k,"isError",!0),h(k,"isLoading",!1)),O&&(h(J,"isError",!0),h(J,"isLoading",!1)),this.requestHashIds[d]={isLoading:!1,isError:!0,isNew:!1,data:u,included:[],meta:{}},Promise.reject(u)}}}query(s,e={},t={}){const o={resourceMethod:"get",resourceName:s,resourceId:null,resourceParams:e,resourcePayload:null,resourceFallback:[],resourceConfig:t},r=K,a=this._pushRequestHash(o,r);return this._request(o),a}queryRecord(s,e={},t={}){const o={resourceMethod:"get",resourceName:s,resourceId:null,resourceParams:e,resourcePayload:null,resourceFallback:{},resourceConfig:t},r=U,a=this._pushRequestHash(o,r);return this._request(o),a}findAll(s,e={}){const t={resourceMethod:"get",resourceName:s,resourceId:null,resourceParams:null,resourcePayload:null,resourceFallback:[],resourceConfig:e},o=K,r=this._pushRequestHash(t,o);return this._request(t),r}findRecord(s,e,t={},o={}){const r={resourceMethod:"get",resourceName:s,resourceId:e,resourceParams:t,resourcePayload:null,resourceFallback:{},resourceConfig:o},a=U,n=this._pushRequestHash(r,a);return this._request(r),n}peekAll(s){return this.collections[s]}peekRecord(s,e){return q(this.collections[s],{id:e})}ajax(s={}){return f.request(s)}findBy(s,e={}){return q(s,e)}findIndexBy(s,e={}){return m(s,e)}filterBy(s,e={}){return Y(s,e)}sortBy(s,e){return this._sortRecordsBy(s,e)}isEmpty(s){return x(s)}isPresent(s){return!x(s)}isEqual(s,e){return I(s,e)}isNumber(s){return S(s)}isNil(s){return g(s)}isNull(s){return X(s)}isGte(s,e){return R(s,e)}isGt(s,e){return ps(s,e)}isLte(s,e){return Is(s,e)}isLt(s,e){return z(s,e)}}return Rs});
